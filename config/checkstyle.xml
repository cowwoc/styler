<?xml version="1.0"?>
<!DOCTYPE module PUBLIC  "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
	"https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
	<module name="SuppressWarningsFilter"/>
	<module name="BeforeExecutionExclusionFileFilter">
		<property name="fileNamePattern" value="module\-info\.java$"/>
	</module>
	<module name="SuppressionSingleFilter">
		<property name="files" value="[/\\]target[/\\]"/>
		<property name="checks" value=".*"/>
	</module>
	<module name="SuppressionSingleFilter">
		<property name="files" value="[/\\]src[/\\]test[/\\]"/>
		<property name="checks" value="MissingJavadocType"/>
	</module>
	<module name="TreeWalker">
		<module name="SuppressWarningsHolder"/>
		<!-- CRITICAL: Enforce tabs for indentation (TIER 1 rule) -->
		<module name="RegexpSinglelineJava">
			<property name="format" value="^    "/>
			<property name="message" value="Indentation must use tabs, not spaces (4 spaces found)"/>
			<property name="ignoreComments" value="true"/>
		</module>
		<module name="RegexpSinglelineJava">
			<property name="format" value="^  [^ ]"/>
			<property name="message" value="Indentation must use tabs, not spaces (2 spaces found)"/>
			<property name="ignoreComments" value="true"/>
		</module>
		<module name="InvalidJavadocPosition"/>
		<module name="JavadocBlockTagLocation"/>
		<module name="JavadocContentLocationCheck"/>
		<module name="JavadocMethod"/>
		<module name="JavadocMissingLeadingAsterisk"/>
		<module name="JavadocMissingWhitespaceAfterAsterisk"/>
		<module name="JavadocStyle"/>
		<module name="JavadocTagContinuationIndentation">
			<property name="offset" value="1"/>
		</module>
		<module name="JavadocType"/>
		<module name="JavadocVariable">
			<property name="accessModifiers" value="protected"/>
		</module>
		<!--
		PMD does a better job, except for Record constructors which are missing. Once PMD is fixed, comment-out
		this rule.
		WORKAROUND: https://github.com/pmd/pmd/issues/4515
		-->
		<module name="MissingJavadocMethod">
			<property name="tokens" value="COMPACT_CTOR_DEF"/>
		</module>

		<module name="MissingJavadocType"/>
		<module name="NonEmptyAtclauseDescription"/>
		<module name="RequireEmptyLineBeforeBlockTagGroup"/>
		<module name="SingleLineJavadoc">
			<property name="ignoreInlineTags" value="false"/>
		</module>
		<!--		<module name="SummaryJavadocCheck"/>-->
		<!--		<module name="WriteTag"/>-->
		<module name="LeftCurly">
			<property name="option" value="nl"/>
			<property name="ignoreEnums" value="false"/>
		</module>
		<module name="RightCurly">
			<property name="option" value="alone"/>
		</module>
		<module name="EmptyCatchBlock">
			<property name="exceptionVariableName" value="ignore|ignored|_"/>
		</module>
		<module name="OperatorWrap">
			<property name="option" value="eol"/>
		</module>
		<module name="SeparatorWrap">
			<property name="tokens"
			          value="DOT, COMMA, SEMI, ELLIPSIS, RPAREN, ARRAY_DECLARATOR, RBRACK, METHOD_REF"/>
			<property name="option" value="eol"/>
		</module>
		<module name="WhitespaceAround">
			<!-- LITERAL_SWITCH: Fails for switch expressions -->
			<property name="tokens"
			          value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON,
			          DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LCURLY, LE, LITERAL_CATCH,
			          LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
			          LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,
			          MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL,
			          SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/>
			<property name="allowEmptyLambdas" value="true"/>
		</module>
		<module name="UnnecessaryParentheses">
			<property name="tokens"
			          value="IDENT, NUM_DOUBLE, NUM_FLOAT, NUM_INT, NUM_LONG, STRING_LITERAL, LITERAL_NULL,
			          LITERAL_FALSE, LITERAL_TRUE, ASSIGN, BAND_ASSIGN, BOR_ASSIGN, BSR_ASSIGN, BXOR_ASSIGN,
			          DIV_ASSIGN, MINUS_ASSIGN, MOD_ASSIGN, PLUS_ASSIGN, SL_ASSIGN, SR_ASSIGN, STAR_ASSIGN,
			          LAMBDA, TEXT_BLOCK_LITERAL_BEGIN, LITERAL_INSTANCEOF, GT, LT, GE, LE, EQUAL,
			           NOT_EQUAL, UNARY_MINUS, UNARY_PLUS, INC, DEC, LNOT, BNOT, POST_INC, POST_DEC"/>
		</module>
		<!-- Forbid ternary operator to enforce explicit if-else statements -->
		<module name="AvoidInlineConditionals"/>
		<module name="TodoComment"/>
		<module name="LocalVariableName">
			<property name="allowOneCharVarInForLoop" value="true"/>
		</module>
		<module name="ParameterName">
			<property name="format" value="^[a-z][a-zA-Z0-9]{1,}$"/>
		</module>
		<module name="MemberName">
			<property name="format" value="^[a-z][a-zA-Z0-9]{1,}$"/>
		</module>

		<!-- Enforce prefix operators for consistency and performance -->
		<module name="IllegalToken">
			<property name="tokens" value="POST_INC,POST_DEC"/>
		</module>
	</module>

	<module name="LineLength">
		<property name="max" value="120"/>
		<property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
		<property name="tabWidth" value="4"/>
	</module>
	<module name="RegexpSingleline">
		<property name="format" value="\s+$"/>
		<property name="message" value="Trailing whitespace found"/>
	</module>

	<!-- Use NullPointerException for null parameter checks -->
	<module name="RegexpSingleline">
		<property name="format" value="throw new IllegalArgumentException.*[Nn]ull"/>
		<property name="message"
		          value="Use NullPointerException for null parameter checks, not IllegalArgumentException"/>
	</module>
	<!-- Validation parameter names must not contain whitespace -->
	<module name="RegexpSingleline">
		<property name="format" value="requireThat\([^,]+,\s*&quot;[^&quot;]*\s[^&quot;]*&quot;\)"/>
		<property name="message"
		          value="Validation parameter names must not contain whitespace - use single words"/>
	</module>
	<module name="RegexpMultiline">
		<property name="message" value="Remove blank line at start of block"/>
		<property name="format" value="\{\s*\r?\n\s*\r?\n"/>
		<property name="fileExtensions" value="java"/>
	</module>
	<module name="RegexpMultiline">
		<property name="message" value="Remove blank line at end of block"/>
		<property name="format" value="\r?\n\s*\r?\n\s*\}"/>
		<property name="fileExtensions" value="java"/>
	</module>
	<!-- Remove else after return statement -->
	<module name="RegexpMultiline">
		<property name="format" value="return\s+[^;]*;\s*\n\s*\}\s*\n\s*else"/>
		<property name="message" value="Remove else after return statement - it's redundant"/>
		<property name="fileExtensions" value="java"/>
	</module>
	<!--	<module name="JavadocPackage"/>-->
</module>